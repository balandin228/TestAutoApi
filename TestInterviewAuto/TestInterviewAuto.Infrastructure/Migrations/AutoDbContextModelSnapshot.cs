// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestInterviewAuto.Infrastructure;

namespace TestInterviewAuto.Infrastructure.Migrations
{
    [DbContext(typeof(AutoDbContext))]
    partial class AutoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TestInterviewAuto.Domain.Model.Brand.Brand", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("TestInterviewAuto.Domain.Model.Car.Car", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("Cars");
                });

            modelBuilder.Entity("TestInterviewAuto.Domain.Model.CarBrand.CarBrand", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("BrandId")
                        .HasColumnType("bigint");

                    b.Property<long>("CarId")
                        .HasColumnType("bigint");

                    b.HasKey("Key");

                    b.HasIndex("BrandId");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.ToTable("CarBrands");
                });

            modelBuilder.Entity("TestInterviewAuto.Domain.Model.CarColor.CarColor", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<long>("CarId")
                        .HasColumnType("bigint");

                    b.Property<long>("ColorId")
                        .HasColumnType("bigint");

                    b.HasKey("Key");

                    b.HasIndex("CarId")
                        .IsUnique();

                    b.HasIndex("ColorId");

                    b.ToTable("CarColors");
                });

            modelBuilder.Entity("TestInterviewAuto.Domain.Model.Color.Color", b =>
                {
                    b.Property<long>("Key")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("Id")
                        .HasColumnType("bigint")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Hex")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Key");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("TestInterviewAuto.Domain.Model.CarBrand.CarBrand", b =>
                {
                    b.HasOne("TestInterviewAuto.Domain.Model.Brand.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestInterviewAuto.Domain.Model.Car.Car", "Car")
                        .WithOne("CarBrand")
                        .HasForeignKey("TestInterviewAuto.Domain.Model.CarBrand.CarBrand", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TestInterviewAuto.Domain.Model.CarColor.CarColor", b =>
                {
                    b.HasOne("TestInterviewAuto.Domain.Model.Car.Car", "Car")
                        .WithOne("CarColor")
                        .HasForeignKey("TestInterviewAuto.Domain.Model.CarColor.CarColor", "CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestInterviewAuto.Domain.Model.Color.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
